<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="名师大班课报名" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
        <stringProp name="BeanShellAssertion.query">String s=new String(prev.getResponseData(),&quot;UTF-8&quot;);
        char aChar;
        int len= s.length();
        StringBuffer outBuffer=new StringBuffer(len);
        for(int x =0; x &lt;len;){
            aChar= s.charAt(x++);
            if(aChar==&apos;\\&apos;){
                aChar= s.charAt(x++);
                if(aChar==&apos;u&apos;){
                    int value =0;
                    for(int i=0;i&lt;4;i++){
                        aChar= s.charAt(x++);
                        switch(aChar){
                            case&apos;0&apos;:
                            case&apos;1&apos;:
                            case&apos;2&apos;:
                            case&apos;3&apos;:
                            case&apos;4&apos;:
                            case&apos;5&apos;:
                            case&apos;6&apos;:
                            case&apos;7&apos;:
                            case&apos;8&apos;:
                            case&apos;9&apos;:
                                value=(value &lt;&lt;4)+aChar-&apos;0&apos;;
                                break;
                            case&apos;a&apos;:
                            case&apos;b&apos;:
                            case&apos;c&apos;:
                            case&apos;d&apos;:
                            case&apos;e&apos;:
                            case&apos;f&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;a&apos;;
                                break;
                            case&apos;A&apos;:
                            case&apos;B&apos;:
                            case&apos;C&apos;:
                            case&apos;D&apos;:
                            case&apos;E&apos;:
                            case&apos;F&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;A&apos;;
                                break;
                            default:
                                throw new IllegalArgumentException(
                                        &quot;Malformed   \\uxxxx  encoding.&quot;);}}
                    outBuffer.append((char) value);}else{
                    if(aChar==&apos;t&apos;)
                        aChar=&apos;\t&apos;;
                    else if(aChar==&apos;r&apos;)
                    aChar=&apos;\r&apos;;
                    else if(aChar==&apos;n&apos;)
                    aChar=&apos;\n&apos;;
                    else if(aChar==&apos;f&apos;)
                    aChar=&apos;\f&apos;;
                    outBuffer.append(aChar);}}else
                outBuffer.append(aChar);}
prev.setResponseData(outBuffer.toString());</stringProp>
        <stringProp name="BeanShellAssertion.filename"></stringProp>
        <stringProp name="BeanShellAssertion.parameters"></stringProp>
        <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
      </BeanShellAssertion>
      <hashTree/>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="script">String s=new String(prev.getResponseData(),&quot;UTF-8&quot;);
        char aChar;
        int len= s.length();
        StringBuffer outBuffer=new StringBuffer(len);
        for(int x =0; x &lt;len;){
            aChar= s.charAt(x++);
            if(aChar==&apos;\\&apos;){
                aChar= s.charAt(x++);
                if(aChar==&apos;u&apos;){
                    int value =0;
                    for(int i=0;i&lt;4;i++){
                        aChar= s.charAt(x++);
                        switch(aChar){
                            case&apos;0&apos;:
                            case&apos;1&apos;:
                            case&apos;2&apos;:
                            case&apos;3&apos;:
                            case&apos;4&apos;:
                            case&apos;5&apos;:
                            case&apos;6&apos;:
                            case&apos;7&apos;:
                            case&apos;8&apos;:
                            case&apos;9&apos;:
                                value=(value &lt;&lt;4)+aChar-&apos;0&apos;;
                                break;
                            case&apos;a&apos;:
                            case&apos;b&apos;:
                            case&apos;c&apos;:
                            case&apos;d&apos;:
                            case&apos;e&apos;:
                            case&apos;f&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;a&apos;;
                                break;
                            case&apos;A&apos;:
                            case&apos;B&apos;:
                            case&apos;C&apos;:
                            case&apos;D&apos;:
                            case&apos;E&apos;:
                            case&apos;F&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;A&apos;;
                                break;
                            default:
                                throw new IllegalArgumentException(
                                        &quot;Malformed   \\uxxxx  encoding.&quot;);}}
                    outBuffer.append((char) value);}else{
                    if(aChar==&apos;t&apos;)
                        aChar=&apos;\t&apos;;
                    else if(aChar==&apos;r&apos;)
                    aChar=&apos;\r&apos;;
                    else if(aChar==&apos;n&apos;)
                    aChar=&apos;\n&apos;;
                    else if(aChar==&apos;f&apos;)
                    aChar=&apos;\f&apos;;
                    outBuffer.append(aChar);}}else
                outBuffer.append(aChar);}
prev.setResponseData(outBuffer.toString());</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Host" elementType="Header">
            <stringProp name="Header.name">Host</stringProp>
            <stringProp name="Header.value">sanbox-interface.xuexi8.net</stringProp>
          </elementProp>
          <elementProp name="DO" elementType="Header">
            <stringProp name="Header.name">DO</stringProp>
            <stringProp name="Header.value">2F5869E7-1639-40E0-9262-3A5F76B51C8E</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">*/*</stringProp>
          </elementProp>
          <elementProp name="ST" elementType="Header">
            <stringProp name="Header.name">ST</stringProp>
            <stringProp name="Header.value">474601</stringProp>
          </elementProp>
          <elementProp name="DSS" elementType="Header">
            <stringProp name="Header.name">DSS</stringProp>
            <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6IjFQY0VhQUlIQjEifQ.eyJpc3MiOiJodHRwczpcL1wvaW50ZXJmYWNlLnh1ZXhpOC5uZXRcLyIsImF1ZCI6Imh0dHBzOlwvXC9pbnRlcmZhY2UueHVleGk4Lm5ldFwvIiwianRpIjoiMVBjRWFBSUhCMSIsImlhdCI6MTYwMzQyMDM2MCwibmJmIjoxNjAzNDIwMzYwLCJleHAiOjE2MDM0MjA2NjAsInVpZCI6IjE1MTkzNCIsInVzZXIiOnsiaWQiOiIxNTE5MzQiLCJ0cnVlX25hbWUiOiJcdTU2ZGUiLCJzdHVkZW50X25vIjoiMDAwMDAwMjM1MiIsInVfcGhvbmUiOiIxNzYxMDgzMTAwMCIsImdyYWRlIjoiNiIsInhfaWQiOiI0NzQ2MDEiLCJ4X3NfdHlwZSI6IjEiLCJzdGF0dXMiOiIxIiwibmV3X2F2YXRhciI6Imh0dHBzOlwvXC94dWV4aTgub3NzLWNuLWJlaWppbmcuYWxpeXVuY3MuY29tXC8yMDIwMDgxNjA4NTk0NFFaUi5qcGc_eC1vc3MtcHJvY2Vzcz1zdHlsZVwvdGh1bWI2Iiwic2V4IjoiMSIsInNjaG9vbCI6IiIsImdyYWRlX25hbWUiOiJcdTRlOTRcdTVlNzRcdTdlYTciLCJpc19ydWxlIjoiMSJ9fQ.2qnxWF1zb38iPkUwvdYmUaew57ZICcbpD2D5N_g7HJI</stringProp>
          </elementProp>
          <elementProp name="LONGITUDE" elementType="Header">
            <stringProp name="Header.name">LONGITUDE</stringProp>
            <stringProp name="Header.value">113.7122655966163</stringProp>
          </elementProp>
          <elementProp name="APPCLIENT" elementType="Header">
            <stringProp name="Header.name">APPCLIENT</stringProp>
            <stringProp name="Header.value">IOS</stringProp>
          </elementProp>
          <elementProp name="LATITUDE" elementType="Header">
            <stringProp name="Header.name">LATITUDE</stringProp>
            <stringProp name="Header.value">34.79618428038658</stringProp>
          </elementProp>
          <elementProp name="APPVERSION" elementType="Header">
            <stringProp name="Header.name">APPVERSION</stringProp>
            <stringProp name="Header.value">6.4.0</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">zh-Hans-CN;q=1.0</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip;q=1.0, compress;q=0.5</stringProp>
          </elementProp>
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="DST" elementType="Header">
            <stringProp name="Header.name">DST</stringProp>
            <stringProp name="Header.value">2b5ae9f0a7164794ba35544203aa437b</stringProp>
          </elementProp>
          <elementProp name="Content-Length" elementType="Header">
            <stringProp name="Header.name">Content-Length</stringProp>
            <stringProp name="Header.value">144</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">AiLeXue/6.4.0 (me.fzw.XueXi8; build:1; iOS 14.0.0) Alamofire/4.8.2</stringProp>
          </elementProp>
          <elementProp name="Connection" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="Cookie" elementType="Header">
            <stringProp name="Header.name">Cookie</stringProp>
            <stringProp name="Header.value">_bl_uid=4mkOFg6XlhIky2yay3Fmp1ji54t9; PHPSESSID=vr6f9kdajlk5lju29k18ve226v</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="名师大班课测试-测试环境" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="测试环境默认请求" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sanbox-interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config测试环境" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">GB2312</stringProp>
          <stringProp name="filename">/useraccount-test.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">phone,password,student_id</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报名" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;device&quot;:&quot;2&quot;,&quot;course_tem_id&quot;:&quot;1338&quot;,&quot;student_id&quot;:&quot;${student_id}&quot;,&quot;type&quot;:&quot;4&quot;,&quot;timestamp&quot;:${__time(/1000,)}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Orderpay&amp;a=payZero</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报名" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="device" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">device</stringProp>
              </elementProp>
              <elementProp name="course_tem_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1274</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_tem_id</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">152297</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="timestamp" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">timestamp</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Orderpay&amp;a=payZero </stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">{&quot;device&quot;:&quot;2&quot;,&quot;course_tem_id&quot;:&quot;1274&quot;,&quot;student_id&quot;:&quot;152273&quot;,&quot;type&quot;:&quot;4&quot;,&quot;timestamp&quot;:${__time(/1000,)}}</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报名" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;device&quot;:&quot;2&quot;,&quot;course_tem_id&quot;:&quot;1313&quot;,&quot;student_id&quot;:&quot;${student_id}&quot;,&quot;type&quot;:&quot;4&quot;,&quot;timestamp&quot;:${__time(/1000,)}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Orderpay&amp;a=payZero</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">1313-分班合班005</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="课程列表信息" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=liveCourseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
