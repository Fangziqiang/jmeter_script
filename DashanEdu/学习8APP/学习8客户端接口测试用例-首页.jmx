<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="学生端API模块" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="script">String s=new String(prev.getResponseData(),&quot;UTF-8&quot;);
        char aChar;
        int len= s.length();
        StringBuffer outBuffer=new StringBuffer(len);
        for(int x =0; x &lt;len;){
            aChar= s.charAt(x++);
            if(aChar==&apos;\\&apos;){
                aChar= s.charAt(x++);
                if(aChar==&apos;u&apos;){
                    int value =0;
                    for(int i=0;i&lt;4;i++){
                        aChar= s.charAt(x++);
                        switch(aChar){
                            case&apos;0&apos;:
                            case&apos;1&apos;:
                            case&apos;2&apos;:
                            case&apos;3&apos;:
                            case&apos;4&apos;:
                            case&apos;5&apos;:
                            case&apos;6&apos;:
                            case&apos;7&apos;:
                            case&apos;8&apos;:
                            case&apos;9&apos;:
                                value=(value &lt;&lt;4)+aChar-&apos;0&apos;;
                                break;
                            case&apos;a&apos;:
                            case&apos;b&apos;:
                            case&apos;c&apos;:
                            case&apos;d&apos;:
                            case&apos;e&apos;:
                            case&apos;f&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;a&apos;;
                                break;
                            case&apos;A&apos;:
                            case&apos;B&apos;:
                            case&apos;C&apos;:
                            case&apos;D&apos;:
                            case&apos;E&apos;:
                            case&apos;F&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;A&apos;;
                                break;
                            default:
                                throw new IllegalArgumentException(
                                        &quot;Malformed   \\uxxxx  encoding.&quot;);}}
                    outBuffer.append((char) value);}else{
                    if(aChar==&apos;t&apos;)
                        aChar=&apos;\t&apos;;
                    else if(aChar==&apos;r&apos;)
                    aChar=&apos;\r&apos;;
                    else if(aChar==&apos;n&apos;)
                    aChar=&apos;\n&apos;;
                    else if(aChar==&apos;f&apos;)
                    aChar=&apos;\f&apos;;
                    outBuffer.append(aChar);}}else
                outBuffer.append(aChar);}
prev.setResponseData(outBuffer.toString());</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
        <stringProp name="BeanShellAssertion.query">String s=new String(prev.getResponseData(),&quot;UTF-8&quot;);
        char aChar;
        int len= s.length();
        StringBuffer outBuffer=new StringBuffer(len);
        for(int x =0; x &lt;len;){
            aChar= s.charAt(x++);
            if(aChar==&apos;\\&apos;){
                aChar= s.charAt(x++);
                if(aChar==&apos;u&apos;){
                    int value =0;
                    for(int i=0;i&lt;4;i++){
                        aChar= s.charAt(x++);
                        switch(aChar){
                            case&apos;0&apos;:
                            case&apos;1&apos;:
                            case&apos;2&apos;:
                            case&apos;3&apos;:
                            case&apos;4&apos;:
                            case&apos;5&apos;:
                            case&apos;6&apos;:
                            case&apos;7&apos;:
                            case&apos;8&apos;:
                            case&apos;9&apos;:
                                value=(value &lt;&lt;4)+aChar-&apos;0&apos;;
                                break;
                            case&apos;a&apos;:
                            case&apos;b&apos;:
                            case&apos;c&apos;:
                            case&apos;d&apos;:
                            case&apos;e&apos;:
                            case&apos;f&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;a&apos;;
                                break;
                            case&apos;A&apos;:
                            case&apos;B&apos;:
                            case&apos;C&apos;:
                            case&apos;D&apos;:
                            case&apos;E&apos;:
                            case&apos;F&apos;:
                                value=(value &lt;&lt;4)+10+aChar-&apos;A&apos;;
                                break;
                            default:
                                throw new IllegalArgumentException(
                                        &quot;Malformed   \\uxxxx  encoding.&quot;);}}
                    outBuffer.append((char) value);}else{
                    if(aChar==&apos;t&apos;)
                        aChar=&apos;\t&apos;;
                    else if(aChar==&apos;r&apos;)
                    aChar=&apos;\r&apos;;
                    else if(aChar==&apos;n&apos;)
                    aChar=&apos;\n&apos;;
                    else if(aChar==&apos;f&apos;)
                    aChar=&apos;\f&apos;;
                    outBuffer.append(aChar);}}else
                outBuffer.append(aChar);}
prev.setResponseData(outBuffer.toString());</stringProp>
        <stringProp name="BeanShellAssertion.filename"></stringProp>
        <stringProp name="BeanShellAssertion.parameters"></stringProp>
        <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
      </BeanShellAssertion>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults—测试环境" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">interface.sanbox.xuexi8.net</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config测试环境" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">GB2312</stringProp>
        <stringProp name="filename">/data/useraccount-test.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">phone,password,student_id,student_name,x_id,grade,student_no,school</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults—Pre" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">pre-interface.xuexi8.net</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config-Pre" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">GB2312</stringProp>
        <stringProp name="filename">/data/useraccount-release.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">phone,password,student_id,student_name,x_id,grade,student_no,school</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults—生产环境" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config-生产环境" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">GB2312</stringProp>
        <stringProp name="filename">/data/useraccount-release.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">phone,password,student_id,student_name,x_id,grade,student_no,school</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HttpCodeStatus断言" enabled="true">
        <collectionProp name="Asserion.test_strings">
          <stringProp name="-1606201635">HTTP/1.1 200 OK</stringProp>
        </collectionProp>
        <stringProp name="Assertion.custom_message"></stringProp>
        <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">16</intProp>
        <stringProp name="Assertion.scope">all</stringProp>
      </ResponseAssertion>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Benshell断言样例" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler（mock返回信息）" enabled="true">
          <stringProp name="BeanShellSampler.query">return &quot;{&quot;code&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;name&quot;:&quot;6.0.1&quot;,&quot;ios_version&quot;:&quot;6.1.0&quot;,&quot;ipad_version&quot;:&quot;6.1.0&quot;,&quot;hd_version&quot;:&quot;6.1.1&quot;,&quot;ios_down_url&quot;:&quot;&quot;,&quot;android_down_url&quot;:&quot;http://www.xuexi8.net/xuexi8/xuexi8.apk&quot;,&quot;hd_down_url&quot;:&quot;http://www.xuexi8.net/xuexi8/xuexi8Hd.apk&quot;,&quot;ipad_down_url&quot;:&quot;&quot;,&quot;updata_content&quot;:&quot;学习8 v6.0全新改版，让学习更高效！&quot;},&quot;msg&quot;:&quot;ok&quot;}&quot;</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.assertions; 
import org.apache.jmeter.samplers.SampleResult; 
import org.apache.jmeter.assertions.AssertionResult; 
import org.json.*;
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(response_data);
String code = data_obj.get(&quot;remark&quot;); 
log.info(code);
if(code.equals(&quot;接口测试服务商&quot;)) 
{ 
String user_name = data_obj.get(&quot;dockedContact&quot;).get(&quot;name&quot;).toString(); 
    if(user_name.equals(&quot;zhufc&quot;)){ 
    Failure = true; 
    log.info(user_name);
    log.info(&quot;提取值与预期相符,断言通过&quot;);
    FailureMessage = &quot;断言通过&quot;;
    } 
    else{ 
    	Failure = false;
    	log.info(&quot;名称不同，断言失败&quot;);
    	FailureMessage = &quot;断言失败&quot;;
prev.setStopThread(true);
    } 
} </stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor-org.json" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.assertions; 
import org.apache.jmeter.samplers.SampleResult; 
import org.apache.jmeter.assertions.AssertionResult; 
import org.json.*;
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(response_data);
String status = data_obj.get(&quot;status&quot;); 

log.info(status);
if(status.equals(&quot;0&quot;)) 
{
	String msg = data_obj.get(&quot;msg&quot;).toString();
	//String login_token = data_obj.get(&quot;data&quot;).data_obj.get(&quot;login_token&quot;)toString();
	if(msg.equals(&quot;登录成功1&quot;)){ 
//		Failure = false; 
		log.info(msg);
		log.info(&quot;提取值与预期相符,断言通过&quot;);
		FailureMessage = &quot;断言通过&quot;;
    }
    else{
    	//把断言失败置为真，即用例失败，并在结果树中显示FailureMessage
    		Failure = true;
    		log.info(&quot;名称不同，断言失败&quot;);
    		FailureMessage = &quot;断言失败&quot;;
//	prev.setStopThread(true);
	}
}</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor_fastjson" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
//import org.json.*;

String init = vars.get(&quot;banner_list&quot;);

// 转换JSON串
JSONObject json = JSONObject.parseObject(init);
String course_id = json.getString(&quot;course_id&quot;);
String course_type = json.getString(&quot;course_type&quot;);
String is_topic = json.getString(&quot;is_topic&quot;);


vars.put(&quot;course_id&quot;,course_id);
vars.put(&quot;course_type&quot;,course_type);
vars.put(&quot;is_topic&quot;,is_topic);
</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${phone}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">phone</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="last_device" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">last_device</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Userv2&amp;a=loginStuednt</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">login_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="40618130">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;登录成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.assertions; 
import org.apache.jmeter.samplers.SampleResult; 
import org.apache.jmeter.assertions.AssertionResult; 
import org.json.*;
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(response_data);
String status = data_obj.get(&quot;status&quot;); 

log.info(status);
if(status.equals(&quot;0&quot;))
{
	String msg = data_obj.get(&quot;msg&quot;).toString();
	String login_token = data_obj.get(&quot;data&quot;).get(&quot;login_token&quot;).toString();
	//如果msg为登录成功，且token不为空，则断言成功
	if(msg.equals(&quot;登录成功&quot;)&amp;&amp;login_token!=&quot;&quot;){
		Failure = false;
		log.info(msg);
//		log.info(&quot;提取值与预期相符,断言通过&quot;);
		String message = &quot;提取值与预期相符,断言通过!\n&quot;;
		FailureMessage = message + &quot;响应信息：\n&quot;+response_data;
    }
    else{
    	//把断言失败置为真，即用例失败，并在结果树中显示FailureMessage
    		Failure = true;
//    		log.info(&quot;名称不同，断言失败&quot;);
		String message=&quot;名称不同，断言失败\n&quot;;
    		FailureMessage = message + &quot;响应信息：\n&quot;+response_data;
//	prev.setStopThread(true);
	}
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="学生登录日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;student_id&quot;:&quot;${student_id}&quot;,&#xd;
&quot;student_name&quot;:&quot;${student_name}&quot;,&#xd;
&quot;student_picture&quot;:&quot;https://xuexi8.oss-cn-beijing.aliyuncs.com/201906131645286945.jpg?x-oss-process=style/thumb6&quot;,&#xd;
&quot;longitude&quot;:&quot;125.34&quot;,&#xd;
&quot;latitude&quot;:&quot;34.1&quot;,&#xd;
&quot;address&quot;:&quot;金水区&quot;,&#xd;
&quot;phone_model&quot;:&quot;Oppo华为&quot;,&#xd;
&quot;os_version&quot;:&quot;android7.1.1&quot;,&#xd;
&quot;app_version&quot;:&quot;v6.0.0&quot;,&#xd;
&quot;distinguishability&quot;:&quot;720p&quot;,&#xd;
&quot;login_source&quot;:&quot;3&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=MobileConfig&amp;a=studentLoginLog</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">18539931686</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">phone</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Aa123456</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="last_device" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">last_device</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Userv2&amp;a=loginStuednt</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">login_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="转发邀请链接至朋友圈，每次可获得20个盾币奖励" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=inivte&amp;a=addinivitePoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页-打开app时一系列默认接口请求" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="强制升级接口（需断言最新版本是否正确）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=MobileConfig&amp;a=forceUpdata</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言安卓和IOS最新版本是否正确" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1608761586">&quot;android_version&quot;:&quot;6.1.6&quot;,&quot;ios_version&quot;:&quot;6.3.0&quot;,&quot;ipad_version&quot;:&quot;6.3.0&quot;,&quot;hd_version&quot;:&quot;6.1.6&quot;</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">断言安卓和IOS最新版本是否正确，以及安卓手机版和HD版是否有下载地址</stringProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看安卓手机版下载地址是否可用" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/xuexi8/xuexi8.apk</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler下载文件" enabled="false">
          <stringProp name="BeanShellSampler.query">import java.io.*;
 
byte[] result = prev.getResponseData();  //这个是获取到请求返回的数据，prev是获取上个请求的返回
 
String file_name = &quot;E:\\apache-jmeter-5.2.1\\download\\xuexi8.apk&quot;; //代表存放文件的位置和文件名
 
File file = new File(file_name);
 
FileOutputStream out = new FileOutputStream(file);
 
out.write(result);
 
out.close();</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="推荐课程弹窗图" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Extent&amp;a=sanPing</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">打开APP时弹窗图接口</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取当前学生购物车商品数量" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;student_id&quot;:&quot;${student_id}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=StudentCar&amp;a=countCouse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.assertions; 
import org.apache.jmeter.samplers.SampleResult; 
import org.apache.jmeter.assertions.AssertionResult; 
import org.json.JSONObject;
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(response_data);
String status = data_obj.get(&quot;status&quot;); 
log.info(status);
if(status.equals(&quot;0&quot;))
{ 
String msg = data_obj.get(&quot;msg&quot;).toString(); 
    if(msg.equals(&quot;操作成功&quot;)){ 
    Failure = false; 
    log.info(msg);
    log.info(&quot;提取值与预期相符,断言通过&quot;);
    FailureMessage = &quot;断言通过&quot;;
    } 
    else{ 
    	Failure = true;
    	log.info(&quot;名称不同，断言失败&quot;);
    	FailureMessage = &quot;断言失败&quot;;
prev.setStopThread(true);
    } 
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取icon图标" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=system&amp;a=app_icons</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="923594753">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;请求成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePage" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Homepage&amp;a=index</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appimgs" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=system&amp;a=app_imgs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—专题及banner" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取首页banner图" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=teacher&amp;a=sliderPic</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">banner类型：视频课、直播课、专题、活动链接；course_type：0:直播课；1:视频课；2:视频课专题; 4:活动链接</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取专题中topic_id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">topic_id_all</stringProp>
            <stringProp name="RegexExtractor.regex">topic_id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">banner_list_all</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[&quot;course_id&quot;,&quot;course_type&quot;,&quot;is_topic&quot;]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">banner_list_all</stringProp>
          <stringProp name="ForeachController.returnVal">banner_list</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor_fastjson" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
//import org.json.*;

String init = vars.get(&quot;banner_list&quot;);

// 转换JSON串
JSONObject json = JSONObject.parseObject(init);
String course_id = json.getString(&quot;course_id&quot;);
String is_topic = json.getString(&quot;is_topic&quot;);
String course_type = json.getString(&quot;course_type&quot;);


vars.put(&quot;course_id&quot;,course_id);
vars.put(&quot;course_type&quot;,course_type);
vars.put(&quot;is_topic&quot;,is_topic);

log.info(&quot;666&quot;);
log.info(&quot;course_type:&quot;+course_type);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看banner中视频课详情-test" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
                <elementProp name="position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">position</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="group_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">group_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">banner类型：视频课、直播课、专题、活动链接；course_type：0:直播课；1:视频课；2:视频课专题; 4:活动链接</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${course_type}&quot;==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <stringProp name="TestPlan.comments">标红字体的意思大概是，如果勾选了 下面的 interpret condition as variable expression 则要用_jexl3或者_groovy 转换成true或者false</stringProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看banner中视频课详情-test" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="course_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${course_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">course_id</stringProp>
                  </elementProp>
                  <elementProp name="position" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">position</stringProp>
                  </elementProp>
                  <elementProp name="student_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${student_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">student_id</stringProp>
                  </elementProp>
                  <elementProp name="group_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">group_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看banner中视频课详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="position" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">position</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="group_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">group_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="获取所有topic_id—ForEach控制器" enabled="true">
          <stringProp name="ForeachController.inputVal">topic_id_all</stringProp>
          <stringProp name="ForeachController.returnVal">topic_id</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller如果专题不是直播课专题，则执行" enabled="true">
            <stringProp name="IfController.condition">${topic_id}!=29</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看专题列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="topic_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${topic_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">topic_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=topicList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取专题课列表中的课程id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">course_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="33913981">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach循环获取专题课列表下所有课程course_id" enabled="true">
              <stringProp name="ForeachController.inputVal">course_id</stringProp>
              <stringProp name="ForeachController.returnVal">id</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="遍历查看专题列表中视频课详情${id}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="course_id" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${id}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">course_id</stringProp>
                    </elementProp>
                    <elementProp name="position" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">position</stringProp>
                    </elementProp>
                    <elementProp name="student_id" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">193430</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">student_id</stringProp>
                    </elementProp>
                    <elementProp name="group_id" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">group_id</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看banner中直播课详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="live_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">live_id</stringProp>
              </elementProp>
              <elementProp name="position" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">position</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="group_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">group_id</stringProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=liveCourseInfo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="直播课课程概述h5" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="c" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">school</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">c</stringProp>
              </elementProp>
              <elementProp name="a" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">summarizeZhibo</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">a</stringProp>
              </elementProp>
              <elementProp name="plaso_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">plaso_id</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="app_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">6.0.1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">app_version</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2//index.php?</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看banner中视频课详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="position" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">position</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="group_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">group_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="视频课课程概述h5" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="c" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">school</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">c</stringProp>
              </elementProp>
              <elementProp name="a" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">summarizeOnline_jiekou</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">a</stringProp>
              </elementProp>
              <elementProp name="course_tem_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_tem_id</stringProp>
              </elementProp>
              <elementProp name="app_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">6.0.1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">app_version</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2//index.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—网课推荐" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取网课推荐—第一页" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pagenum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pagenum</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=recommendCourseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言是否请求成功" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="33913981">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">type;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.data[*].type;$.data.data[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1;-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">1;1821</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller(循环控制器)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">100</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller—type=1（直播课）" enabled="true">
            <stringProp name="IfController.condition">&quot;${__V(type_${counter})}&quot;==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="遍历查看直播课列表中直播课详情—${__V(id_${counter})}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="live_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__V(id_${counter})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">live_id</stringProp>
                  </elementProp>
                  <elementProp name="position" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">position</stringProp>
                  </elementProp>
                  <elementProp name="student_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">193430</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">student_id</stringProp>
                  </elementProp>
                  <elementProp name="group_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">group_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=liveCourseInfo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取老师id—teacher_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">teacher_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;teacher_id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取cc_look_url_all" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cc_look_url_all</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;cc_look_url&quot;:&quot;https:\/\/interface.xuexi8.net\/\/jiekou2\/\/index.php\?(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">0</stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller—type=2（视频课）" enabled="true">
            <stringProp name="IfController.condition">&quot;${__V(type_${counter})}&quot;==&quot;2&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="遍历查看好课推荐列表中视频课详情--${__V(id_${counter})}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="course_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__V(id_${counter})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">course_id</stringProp>
                  </elementProp>
                  <elementProp name="position" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">position</stringProp>
                  </elementProp>
                  <elementProp name="student_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">193430</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">student_id</stringProp>
                  </elementProp>
                  <elementProp name="group_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">group_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">interface.xuexi8.net</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取好课推荐—第二页" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pagenum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pagenum</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=recommendCourseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言是否请求成功" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="33913981">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言页码" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1088789813">&quot;pagenow&quot;:2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—网课—视频课" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="筛选接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Homepage&amp;a=onlineHeader</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言data" enabled="true">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:1,&quot;name&quot;:&quot;精品课&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;59&quot;,&quot;name&quot;:&quot;一年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;60&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;61&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;73&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;441&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;442&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;443&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;444&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;445&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;446&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;447&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;}]},{&quot;id&quot;:&quot;56&quot;,&quot;name&quot;:&quot;二年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;57&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;58&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;65&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;448&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;449&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;450&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;451&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;452&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;453&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;454&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;}]},{&quot;id&quot;:&quot;32&quot;,&quot;name&quot;:&quot;三年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;33&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;34&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;67&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;455&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;456&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;457&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;458&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;459&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;460&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;461&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;}]},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;四年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;27&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;462&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;463&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;464&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;465&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;466&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;467&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;468&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;五年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;28&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;469&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;470&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;471&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;472&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;473&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;474&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;475&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;}]},{&quot;id&quot;:&quot;9&quot;,&quot;name&quot;:&quot;六年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;11&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;29&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;476&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;477&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;478&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;479&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;480&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;481&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;482&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;}]},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;七年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;13&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;35&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;53&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;54&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;55&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;83&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;483&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;484&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;485&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;}]},{&quot;id&quot;:&quot;15&quot;,&quot;name&quot;:&quot;八年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;16&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;17&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;18&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;36&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;50&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;51&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;52&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;486&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;487&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;488&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;}]},{&quot;id&quot;:&quot;19&quot;,&quot;name&quot;:&quot;九年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;21&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;22&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;23&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;37&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;47&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;48&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;49&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;489&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;490&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;}]},{&quot;id&quot;:&quot;24&quot;,&quot;name&quot;:&quot;高一&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;30&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;38&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;39&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;63&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;64&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;68&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;74&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;75&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;76&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;491&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;}]},{&quot;id&quot;:&quot;25&quot;,&quot;name&quot;:&quot;高二&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;31&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;40&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;41&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;62&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;66&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;69&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;77&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;78&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;79&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;492&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;}]},{&quot;id&quot;:&quot;26&quot;,&quot;name&quot;:&quot;高三&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;42&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;43&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;44&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;45&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;46&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;70&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;80&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;81&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;82&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;493&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;}]}]},{&quot;id&quot;:2,&quot;name&quot;:&quot;公开课&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;学习规划&quot;},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;核心素养&quot;},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;政策解读&quot;}]},{&quot;id&quot;:3,&quot;name&quot;:&quot;家长课&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;亲子沟通&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;心理疏导&quot;},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;学习兴趣&quot;},{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;家庭关系&quot;}]}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回码断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询视频课列表（默认查询条件）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="grade_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grade_id</stringProp>
              </elementProp>
              <elementProp name="subject_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject_id</stringProp>
              </elementProp>
              <elementProp name="price_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">price_type</stringProp>
              </elementProp>
              <elementProp name="search" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">search</stringProp>
              </elementProp>
              <elementProp name="lesson_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lesson_type</stringProp>
              </elementProp>
              <elementProp name="lesson_type_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lesson_type_id</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">lesson_type：0 精品课；subject_id：0 全部科目；price_type：0  全部 ；</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言是否请求成功" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
              <stringProp name="404500720">&quot;status&quot;:&quot;2&quot;,&quot;msg&quot;:&quot;暂无相关内容&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取列表中的课程id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">video_course_id_page1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach循环获取专题课列表下所有课程course_id" enabled="true">
          <stringProp name="ForeachController.inputVal">video_course_id_page1</stringProp>
          <stringProp name="ForeachController.returnVal">course_id</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="遍历查看视频课列表中视频课详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
                <elementProp name="position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">position</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="group_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">group_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=videoCourseInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="teacher_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">teacher_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;teacher_id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="课程概述H5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">school</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">summarizeOnline_jiekou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                </elementProp>
                <elementProp name="course_tem_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_tem_id</stringProp>
                </elementProp>
                <elementProp name="app_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">6.0.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">app_version</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2//index.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HTMLAssertion guiclass="HTMLAssertionGui" testclass="HTMLAssertion" testname="HTML Assertion" enabled="false">
              <longProp name="html_assertion_error_threshold">0</longProp>
              <longProp name="html_assertion_warning_threshold">0</longProp>
              <stringProp name="html_assertion_doctype">auto</stringProp>
              <boolProp name="html_assertion_errorsonly">false</boolProp>
              <longProp name="html_assertion_format">0</longProp>
              <stringProp name="html_assertion_filename"></stringProp>
            </HTMLAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取在线课评价列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
                <elementProp name="course_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_type</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=evaluateList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">该脚本可以查询数据库后进行优化，从数据库中提取数据，将课程id、是否有评论进行参数化，然后在断言中进行断言</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
                <stringProp name="-697086997">&quot;status&quot;:&quot;2&quot;,&quot;msg&quot;:&quot;暂时没有相关评价哦&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加视频课到收藏" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=School&amp;a=addFavorite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">type: 课程类型0线上课1直播课3线下班课</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2064094975">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;收藏成功&quot;,&quot;type&quot;:&quot;1&quot;},&quot;code&quot;:200}</stringProp>
                <stringProp name="-228591611">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;取消成功&quot;,&quot;type&quot;:&quot;0&quot;},&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消收藏视频课" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=School&amp;a=addFavorite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">type: 课程类型0线上课1直播课3线下班课</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2064094975">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;收藏成功&quot;,&quot;type&quot;:&quot;1&quot;},&quot;code&quot;:200}</stringProp>
                <stringProp name="-228591611">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;取消成功&quot;,&quot;type&quot;:&quot;0&quot;},&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="老师主页—获取老师主页详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="teacher_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${teacher_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">teacher_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Teacher&amp;a=teacherIndex</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="视频课分享type=11" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="relation_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">relation_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Queue&amp;a=share</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取H5样式（CSS）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2//css/summarize.css</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—网课—直播课" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="筛选接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Homepage&amp;a=onlineHeader</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言data" enabled="true">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:1,&quot;name&quot;:&quot;精品课&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;59&quot;,&quot;name&quot;:&quot;一年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;60&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;61&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;73&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;441&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;442&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;443&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;444&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;445&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;446&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;447&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;}]},{&quot;id&quot;:&quot;56&quot;,&quot;name&quot;:&quot;二年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;57&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;58&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;65&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;448&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;449&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;450&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;451&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;452&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;453&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;454&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;}]},{&quot;id&quot;:&quot;32&quot;,&quot;name&quot;:&quot;三年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;33&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;34&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;67&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;455&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;456&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;457&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;458&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;459&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;460&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;461&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;}]},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;四年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;27&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;462&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;463&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;464&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;465&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;466&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;467&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;468&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;五年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;28&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;469&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;470&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;471&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;472&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;473&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;474&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;475&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;}]},{&quot;id&quot;:&quot;9&quot;,&quot;name&quot;:&quot;六年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;11&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;29&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;476&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;477&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;478&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;479&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;480&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;481&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;482&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;}]},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;七年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;13&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;35&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;53&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;54&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;55&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;83&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;483&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;484&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;485&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;}]},{&quot;id&quot;:&quot;15&quot;,&quot;name&quot;:&quot;八年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;16&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;17&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;18&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;36&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;50&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;51&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;52&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;486&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;487&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;488&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;}]},{&quot;id&quot;:&quot;19&quot;,&quot;name&quot;:&quot;九年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;21&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;22&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;23&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;37&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;47&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;48&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;49&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;489&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;490&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;}]},{&quot;id&quot;:&quot;24&quot;,&quot;name&quot;:&quot;高一&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;30&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;38&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;39&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;63&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;64&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;68&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;74&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;75&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;76&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;491&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;}]},{&quot;id&quot;:&quot;25&quot;,&quot;name&quot;:&quot;高二&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;31&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;40&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;41&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;62&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;66&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;69&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;77&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;78&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;79&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;492&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;}]},{&quot;id&quot;:&quot;26&quot;,&quot;name&quot;:&quot;高三&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;42&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;43&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;44&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;45&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;46&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;70&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;80&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;81&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;82&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;493&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;}]}]},{&quot;id&quot;:2,&quot;name&quot;:&quot;公开课&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;学习规划&quot;},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;核心素养&quot;},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;政策解读&quot;}]},{&quot;id&quot;:3,&quot;name&quot;:&quot;家长课&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;亲子沟通&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;心理疏导&quot;},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;学习兴趣&quot;},{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;家庭关系&quot;}]}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回码断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询直播课列表（默认查询条件）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="grade_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grade_id</stringProp>
              </elementProp>
              <elementProp name="subject_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject_id</stringProp>
              </elementProp>
              <elementProp name="price_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">price_type</stringProp>
              </elementProp>
              <elementProp name="search" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">search</stringProp>
              </elementProp>
              <elementProp name="lesson_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lesson_type</stringProp>
              </elementProp>
              <elementProp name="lesson_type_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lesson_type_id</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="open_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">open_type</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=liveCourseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">lesson_type：0 精品课；subject_id：0 全部科目；price_type：0  全部 ；open_type全部即将开始精彩回放0,1,2</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言是否请求成功" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取列表中的课程id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">live_course_id_page1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach循环获取专题课列表下所有课程course_id" enabled="true">
          <stringProp name="ForeachController.inputVal">live_course_id_page1</stringProp>
          <stringProp name="ForeachController.returnVal">live_course_id</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="遍历查看直播课列表中直播课详情—${live_course_id}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="live_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">live_id</stringProp>
                </elementProp>
                <elementProp name="position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">position</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="group_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">group_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=liveCourseInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取老师id—teacher_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">teacher_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;teacher_id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取cc_look_url_all" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cc_look_url_all</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;cc_look_url&quot;:&quot;https:\/\/interface.xuexi8.net\/\/jiekou2\/\/index.php\?(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">cc_look_url_all</stringProp>
            <stringProp name="ForeachController.returnVal">cc_look_url</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看直播回放—课程id:${live_course_id}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/jiekou2/index.php?${cc_look_url}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="课程概述H5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">school</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">summarizeZhibo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="plaso_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">plaso_id</stringProp>
                </elementProp>
                <elementProp name="app_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">6.0.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">app_version</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">//jiekou2//index.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HTMLAssertion guiclass="HTMLAssertionGui" testclass="HTMLAssertion" testname="HTML Assertion" enabled="false">
              <longProp name="html_assertion_error_threshold">0</longProp>
              <longProp name="html_assertion_warning_threshold">0</longProp>
              <stringProp name="html_assertion_doctype">auto</stringProp>
              <boolProp name="html_assertion_errorsonly">false</boolProp>
              <longProp name="html_assertion_format">0</longProp>
              <stringProp name="html_assertion_filename"></stringProp>
            </HTMLAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取直播课评价列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
                <elementProp name="course_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_type</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=RewriteOnline&amp;a=evaluateList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">该脚本可以查询数据库后进行优化，从数据库中提取数据，将课程id、是否有评论进行参数化，然后在断言中进行断言</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
                <stringProp name="-697086997">&quot;status&quot;:&quot;2&quot;,&quot;msg&quot;:&quot;暂时没有相关评价哦&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加直播课到收藏" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=School&amp;a=addFavorite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">type: 课程类型0线上课1直播课3线下班课</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2064094975">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;收藏成功&quot;,&quot;type&quot;:&quot;1&quot;},&quot;code&quot;:200}</stringProp>
                <stringProp name="-228591611">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;取消成功&quot;,&quot;type&quot;:&quot;0&quot;},&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消直播课收藏" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=School&amp;a=addFavorite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">type: 课程类型0线上课1直播课3线下班课</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2064094975">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;收藏成功&quot;,&quot;type&quot;:&quot;1&quot;},&quot;code&quot;:200}</stringProp>
                <stringProp name="-228591611">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;取消成功&quot;,&quot;type&quot;:&quot;0&quot;},&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="老师主页—循环获取老师主页详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="teacher_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${teacher_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">teacher_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Teacher&amp;a=teacherIndex</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分享增加盾币" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="teacher_chapter_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">teacher_chapter_id</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
                <elementProp name="share_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">share_type</stringProp>
                </elementProp>
                <elementProp name="practice_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">practice_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=shareAddDunbi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
                <stringProp name="-1477832388">&quot;status&quot;:&quot;2&quot;,&quot;msg&quot;:&quot;已经分享过了&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="直播课分享type=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="relation_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${live_course_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">relation_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Queue&amp;a=share</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869661087">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;ok&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取H5样式（CSS）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2//css/summarize.css</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—面授" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取年级分组" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">jiekou2/index.php?c=Coursev2&amp;a=greadGroup</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言msg" enabled="true">
            <stringProp name="JSON_PATH">$.msg</stringProp>
            <stringProp name="EXPECTED_VALUE">操作成功</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="json中 data断言" enabled="true">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:&quot;59&quot;,&quot;name&quot;:&quot;一年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;60&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;61&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;73&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;441&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;442&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;443&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;444&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;445&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;446&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;447&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;}]},{&quot;id&quot;:&quot;56&quot;,&quot;name&quot;:&quot;二年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;57&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;58&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;65&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;448&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;449&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;450&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;451&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;452&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;453&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;454&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;}]},{&quot;id&quot;:&quot;32&quot;,&quot;name&quot;:&quot;三年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;33&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;34&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;67&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;455&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;456&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;457&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;458&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;459&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;460&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;461&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;}]},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;四年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;27&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;462&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;463&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;464&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;465&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;466&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;467&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;468&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;五年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;28&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;469&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;470&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;471&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;472&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;473&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;474&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;475&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;}]},{&quot;id&quot;:&quot;9&quot;,&quot;name&quot;:&quot;六年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;11&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;29&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;476&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;477&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;478&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;479&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;480&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;481&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;482&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;}]},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;七年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;13&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;35&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;53&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;54&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;55&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;83&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;483&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;484&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;485&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;}]},{&quot;id&quot;:&quot;15&quot;,&quot;name&quot;:&quot;八年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;16&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;17&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;18&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;36&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;50&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;51&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;52&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;486&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;487&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;488&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;}]},{&quot;id&quot;:&quot;19&quot;,&quot;name&quot;:&quot;九年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;21&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;22&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;23&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;37&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;47&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;48&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;49&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;489&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;490&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;}]},{&quot;id&quot;:&quot;24&quot;,&quot;name&quot;:&quot;高一&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;30&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;38&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;39&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;63&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;64&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;68&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;74&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;75&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;76&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;491&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;}]},{&quot;id&quot;:&quot;25&quot;,&quot;name&quot;:&quot;高二&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;31&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;40&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;41&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;62&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;66&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;69&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;77&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;78&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;79&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;492&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;}]},{&quot;id&quot;:&quot;26&quot;,&quot;name&quot;:&quot;高三&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;42&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;43&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;44&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;45&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;46&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;70&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;80&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;81&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;82&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;493&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;}]}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课附近三校区(新)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">113.523824</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">34.815005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Teacher&amp;a=getnearSchool_new</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言msg" enabled="true">
            <stringProp name="JSON_PATH">$.near_school</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;lng&quot;:&quot;113.523824&quot;,&quot;lat&quot;:&quot;34.815005&quot;,&quot;id&quot;:&quot;71&quot;,&quot;areas_id&quot;:&quot;18&quot;,&quot;school_name&quot;:&quot;万科城校区&quot;,&quot;address&quot;:&quot;科学大道与须水东路交叉口向北100米路东（星光广场旁边）&quot;,&quot;tell&quot;:&quot;66398678&quot;,&quot;picture&quot;:&quot;1490068172359.jpg&quot;,&quot;distance&quot;:0,&quot;pic&quot;:&quot;https:\/\/xuexi8.oss-cn-beijing.aliyuncs.com\/1490068172359.jpg?x-oss-process=style\/thumb6&quot;,&quot;small_pic&quot;:&quot;https:\/\/xuexi8.oss-cn-beijing.aliyuncs.com\/1490068172359.jpg?x-oss-process=style\/thumb3&quot;},{&quot;lng&quot;:&quot;113.534236&quot;,&quot;lat&quot;:&quot;34.838788&quot;,&quot;id&quot;:&quot;129&quot;,&quot;areas_id&quot;:&quot;18&quot;,&quot;school_name&quot;:&quot;锦和苑校区&quot;,&quot;address&quot;:&quot;郑州市高新区西四环与堂门路交叉口向北100米路东（糖果时光小区西门）&quot;,&quot;tell&quot;:&quot;0371-53377731&quot;,&quot;picture&quot;:null,&quot;distance&quot;:2.81},{&quot;lng&quot;:&quot;113.549278&quot;,&quot;lat&quot;:&quot;34.837062&quot;,&quot;id&quot;:&quot;107&quot;,&quot;areas_id&quot;:&quot;18&quot;,&quot;school_name&quot;:&quot;谦祥万和城校区&quot;,&quot;address&quot;:&quot;高新区长椿路和莲花街交叉口向北100米谦祥万和城D区13号楼底商（工业大学西门斜对面）&quot;,&quot;tell&quot;:&quot;58690833&quot;,&quot;picture&quot;:&quot;course\/default.jpg&quot;,&quot;distance&quot;:3.38,&quot;pic&quot;:&quot;https:\/\/xuexi8.oss-cn-beijing.aliyuncs.com\/course\/default.jpg?x-oss-process=style\/thumb6&quot;,&quot;small_pic&quot;:&quot;https:\/\/xuexi8.oss-cn-beijing.aliyuncs.com\/course\/default.jpg?x-oss-process=style\/thumb3&quot;}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取80个校区" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
              <elementProp name="num" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">80</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">num</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=nearSchool</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="json中 data断言" enabled="false">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:&quot;71&quot;,&quot;name&quot;:&quot;万科城校区&quot;,&quot;lng&quot;:&quot;113.523824&quot;,&quot;lat&quot;:&quot;34.815005&quot;,&quot;distances&quot;:&quot;0.00&quot;},{&quot;id&quot;:&quot;129&quot;,&quot;name&quot;:&quot;锦和苑校区&quot;,&quot;lng&quot;:&quot;113.534236&quot;,&quot;lat&quot;:&quot;34.838788&quot;,&quot;distances&quot;:&quot;2.81&quot;},{&quot;id&quot;:&quot;107&quot;,&quot;name&quot;:&quot;谦祥万和城校区&quot;,&quot;lng&quot;:&quot;113.549278&quot;,&quot;lat&quot;:&quot;34.837062&quot;,&quot;distances&quot;:&quot;3.38&quot;}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="studentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${x_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">studentId</stringProp>
              </elementProp>
              <elementProp name="x_s_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_s_type</stringProp>
              </elementProp>
              <elementProp name="nianji" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">nianji</stringProp>
              </elementProp>
              <elementProp name="subject_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject_id</stringProp>
              </elementProp>
              <elementProp name="school_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">school_id</stringProp>
              </elementProp>
              <elementProp name="class_year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">class_year</stringProp>
              </elementProp>
              <elementProp name="semester" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">semester</stringProp>
              </elementProp>
              <elementProp name="is_hide" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">is_hide</stringProp>
              </elementProp>
              <elementProp name="class_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">class_type</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageNum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageNum</stringProp>
              </elementProp>
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=classCouseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取班课课程id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">banke_id_all</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言msg" enabled="true">
            <stringProp name="JSON_PATH">$.msg</stringProp>
            <stringProp name="EXPECTED_VALUE">操作成功</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">banke_id_all</stringProp>
          <stringProp name="ForeachController.returnVal">banke_id</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课详情——班课ID：${banke_id}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="x_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${x_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">x_id</stringProp>
                </elementProp>
                <elementProp name="class_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${banke_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">class_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=classCouseInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1768401229">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;,&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">parentId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;parentId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bk_name" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">bk_name</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;ds_course_name&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取老师id—teacher_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">teacher_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;teacher_id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="x_id" enabled="true">
              <stringProp name="TestPlan.comments">学帮课程id</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">x_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;x_id&quot;: &quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bk_price" enabled="true">
              <stringProp name="TestPlan.comments">班课价格</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">bk_price</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;existing_price&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="subscn_status" enabled="true">
              <stringProp name="TestPlan.comments">课程状态1课程未开课2课程一开课3课程已完结</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">subscn_status</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;subscn_status&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="课程详情H5——班课ID：${banke_id}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">school</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">summarize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                </elementProp>
                <elementProp name="course_tem_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${parentId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_tem_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="536570291">${bk_name}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="教师主页—循环获取老师主页详情—未登录" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="teacher_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${teacher_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">teacher_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Teacher&amp;a=teacherIndex</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(${teacher_id}!=0,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="教师主页—循环获取老师主页详情—${banke_id}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="teacher_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${teacher_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">teacher_id</stringProp>
                  </elementProp>
                  <elementProp name="student_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${student_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">student_id</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timestamp</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Teacher&amp;a=teacherIndex</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加面授课到收藏" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${banke_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=School&amp;a=addFavorite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-228591611">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;取消成功&quot;,&quot;type&quot;:&quot;0&quot;},&quot;code&quot;:200}</stringProp>
                <stringProp name="2064094975">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;收藏成功&quot;,&quot;type&quot;:&quot;1&quot;},&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消收藏面授课" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${banke_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=School&amp;a=addFavorite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-228591611">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;取消成功&quot;,&quot;type&quot;:&quot;0&quot;},&quot;code&quot;:200}</stringProp>
                <stringProp name="2064094975">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:{&quot;content&quot;:&quot;收藏成功&quot;,&quot;type&quot;:&quot;1&quot;},&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加班课到购物篮" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="couse_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${banke_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">couse_id</stringProp>
                </elementProp>
                <elementProp name="x_couse_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${x_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">x_couse_id</stringProp>
                </elementProp>
                <elementProp name="couse_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${bk_name}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">couse_name</stringProp>
                </elementProp>
                <elementProp name="student_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_name}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_name</stringProp>
                </elementProp>
                <elementProp name="couse_price" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${bk_price}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">couse_price</stringProp>
                </elementProp>
                <elementProp name="couse_status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${subscn_status}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">couse_status</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=StudentCar&amp;a=addCouse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="192470039">{&quot;status&quot;:0,&quot;msg&quot;:&quot;课程已加入购课篮&quot;,&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课分享" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${banke_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=PosterShare&amp;a=getPosterShare</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-929226661">{&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="预约试听" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="couse_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${banke_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">couse_id</stringProp>
              </elementProp>
              <elementProp name="x_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${x_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_id</stringProp>
              </elementProp>
              <elementProp name="couse_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${bk_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">couse_name</stringProp>
              </elementProp>
              <elementProp name="student_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_name</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="tel" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">17610831883</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tel</stringProp>
              </elementProp>
              <elementProp name="school_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">school_id</stringProp>
              </elementProp>
              <elementProp name="school_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">大山外语</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">school_name</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=addAudition</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取购物车列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="x_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${x_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=StudentCar&amp;a=carList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">需要比较购物车商品数量和列表中商品个数是否一致（待完善）</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="33913981">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="car_id_all" enabled="true">
            <stringProp name="TestPlan.comments">购物车商品id</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">car_id_all</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;car_id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import java.util.regex.Matcher;
import java.util.regex.Pattern;
 
car_id_all = vars.get(&quot;car_id_all&quot;);
subs = &quot;\&quot;car_id_all\&quot;&quot;;
Pattern pattern = Pattern.compile(subs); 
Matcher matcher = pattern.matcher(car_id_all); 
int count=0; 
while(matcher.find()){ 
    count++; 
} 
System.out.println(count);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">car_id_all</stringProp>
          <stringProp name="ForeachController.returnVal">car_id</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除购物车数据" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="car_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${car_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">car_id</stringProp>
                </elementProp>
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=StudentCar&amp;a=carDelete</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1508318563">{&quot;status&quot;:&quot;0&quot;,&quot;data&quot;:&quot;操作成功&quot;,&quot;code&quot;:200}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取当前学生购物车商品数量" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;student_id&quot;:&quot;${student_id}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=StudentCar&amp;a=countCouse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.data.num</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—入学测" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取校区分组" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=schoolGroup</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取年级分组" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=myGreadList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="grade_id_all" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">grade_id_all</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">grade_id_all</stringProp>
          <stringProp name="ForeachController.returnVal">grade_id</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="测评接口" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="grade_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${grade_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grade_id</stringProp>
                </elementProp>
                <elementProp name="lat" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">113.664661</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lat</stringProp>
                </elementProp>
                <elementProp name="lng" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">34.77297</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lng</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Student&amp;a=getCepingPaper_new</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
                <stringProp name="411714699">&quot;status&quot;:&quot;2&quot;,&quot;msg&quot;:&quot;暂无相关测评&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="test_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">test_id;subject_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.tname[*].test_id;$.data.tname[*].subject_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="subject_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">subject_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.tname[*].subject_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="做入学测、试卷_开始页面" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="test_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${test_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">test_id</stringProp>
                </elementProp>
                <elementProp name="near_school_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">near_school_id</stringProp>
                </elementProp>
                <elementProp name="school_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">school_id</stringProp>
                </elementProp>
                <elementProp name="begin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">begin</stringProp>
                </elementProp>
                <elementProp name="subject_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${subject_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subject_id</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Student&amp;a=doTestpaperNew</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">begin:开始页面判断0开始页面1题目页面</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1869629343">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;OK&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="test_id_2-testpaper_name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">test_id_2;testpaper_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.course.test_id;$.course.testpaper_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="做入学测、试卷_题目页面" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="student_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${student_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">student_id</stringProp>
                </elementProp>
                <elementProp name="test_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${test_id_2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">test_id</stringProp>
                </elementProp>
                <elementProp name="near_school_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">near_school_id</stringProp>
                </elementProp>
                <elementProp name="school_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">69</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">school_id</stringProp>
                </elementProp>
                <elementProp name="begin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">begin</stringProp>
                </elementProp>
                <elementProp name="subject_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${subject_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subject_id</stringProp>
                </elementProp>
                <elementProp name="course_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">course_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Student&amp;a=doTestpaperNew</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">begin:开始页面判断0开始页面1题目页面</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="首页—面授课推荐" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取年级分组" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">jiekou2/index.php?c=Coursev2&amp;a=greadGroup</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言msg" enabled="true">
            <stringProp name="JSON_PATH">$.msg</stringProp>
            <stringProp name="EXPECTED_VALUE">操作成功</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="json中 data断言" enabled="true">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:&quot;59&quot;,&quot;name&quot;:&quot;一年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;60&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;61&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;73&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;441&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;442&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;443&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;444&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;445&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;446&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;447&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;}]},{&quot;id&quot;:&quot;56&quot;,&quot;name&quot;:&quot;二年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;57&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;58&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;65&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;448&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;449&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;450&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;451&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;452&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;453&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;454&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;}]},{&quot;id&quot;:&quot;32&quot;,&quot;name&quot;:&quot;三年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;33&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;34&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;67&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;455&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;456&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;457&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;458&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;459&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;460&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;461&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;}]},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;四年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;27&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;462&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;463&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;464&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;465&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;466&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;467&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;468&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;五年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;28&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;469&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;470&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;471&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;472&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;473&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;474&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;475&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;}]},{&quot;id&quot;:&quot;9&quot;,&quot;name&quot;:&quot;六年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;11&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;29&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;476&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;477&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;478&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;479&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;480&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;481&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;482&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;}]},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;七年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;13&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;35&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;53&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;54&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;55&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;83&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;483&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;484&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;485&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;}]},{&quot;id&quot;:&quot;15&quot;,&quot;name&quot;:&quot;八年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;16&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;17&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;18&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;36&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;50&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;51&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;52&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;486&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;487&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;488&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;}]},{&quot;id&quot;:&quot;19&quot;,&quot;name&quot;:&quot;九年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;21&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;22&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;23&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;37&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;47&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;48&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;49&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;489&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;490&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;}]},{&quot;id&quot;:&quot;24&quot;,&quot;name&quot;:&quot;高一&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;30&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;38&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;39&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;63&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;64&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;68&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;74&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;75&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;76&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;491&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;}]},{&quot;id&quot;:&quot;25&quot;,&quot;name&quot;:&quot;高二&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;31&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;40&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;41&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;62&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;66&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;69&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;77&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;78&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;79&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;492&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;}]},{&quot;id&quot;:&quot;26&quot;,&quot;name&quot;:&quot;高三&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;42&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;43&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;44&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;45&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;46&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;70&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;80&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;81&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;82&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;493&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;}]}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课附近三校区(新)——参数不正确" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">113.523824</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">34.815005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
              <elementProp name="num" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">num</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Teacher&amp;a=getnearSchool_new</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言msg" enabled="true">
            <stringProp name="JSON_PATH">$.msg</stringProp>
            <stringProp name="EXPECTED_VALUE">操作成功</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="json中 data断言" enabled="true">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:&quot;59&quot;,&quot;name&quot;:&quot;一年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;60&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;61&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;73&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;441&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;442&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;443&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;444&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;445&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;446&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;},{&quot;id&quot;:&quot;447&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;59&quot;}]},{&quot;id&quot;:&quot;56&quot;,&quot;name&quot;:&quot;二年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;57&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;58&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;65&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;448&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;449&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;450&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;451&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;452&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;453&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;},{&quot;id&quot;:&quot;454&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;56&quot;}]},{&quot;id&quot;:&quot;32&quot;,&quot;name&quot;:&quot;三年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;33&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;34&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;67&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;455&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;456&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;457&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;458&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;459&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;460&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;},{&quot;id&quot;:&quot;461&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;32&quot;}]},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;四年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;27&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;462&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;463&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;464&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;465&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;466&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;467&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;468&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;五年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;28&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;469&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;470&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;471&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;472&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;473&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;474&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;475&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;6&quot;}]},{&quot;id&quot;:&quot;9&quot;,&quot;name&quot;:&quot;六年级&quot;,&quot;stage&quot;:&quot;xx&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;11&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;29&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;476&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;477&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;478&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;479&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;480&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;481&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;},{&quot;id&quot;:&quot;482&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;9&quot;}]},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;七年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;13&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;35&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;53&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;54&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;55&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;83&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;483&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;484&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;},{&quot;id&quot;:&quot;485&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;12&quot;}]},{&quot;id&quot;:&quot;15&quot;,&quot;name&quot;:&quot;八年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;16&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;17&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;18&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;36&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;50&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;51&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;52&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;486&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;487&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;},{&quot;id&quot;:&quot;488&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;15&quot;}]},{&quot;id&quot;:&quot;19&quot;,&quot;name&quot;:&quot;九年级&quot;,&quot;stage&quot;:&quot;cz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;21&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;22&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;23&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;37&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;47&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;48&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;49&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;489&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;},{&quot;id&quot;:&quot;490&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;19&quot;}]},{&quot;id&quot;:&quot;24&quot;,&quot;name&quot;:&quot;高一&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;30&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;38&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;39&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;63&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;64&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;68&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;74&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;75&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;76&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;},{&quot;id&quot;:&quot;491&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;24&quot;}]},{&quot;id&quot;:&quot;25&quot;,&quot;name&quot;:&quot;高二&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;31&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;40&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;41&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;62&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;66&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;69&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;77&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;78&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;79&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;},{&quot;id&quot;:&quot;492&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;25&quot;}]},{&quot;id&quot;:&quot;26&quot;,&quot;name&quot;:&quot;高三&quot;,&quot;stage&quot;:&quot;gz&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;child&quot;:[{&quot;id&quot;:&quot;42&quot;,&quot;name&quot;:&quot;语文&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;43&quot;,&quot;name&quot;:&quot;数学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;44&quot;,&quot;name&quot;:&quot;物理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;45&quot;,&quot;name&quot;:&quot;化学&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;46&quot;,&quot;name&quot;:&quot;英语&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;70&quot;,&quot;name&quot;:&quot;生物&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;80&quot;,&quot;name&quot;:&quot;政治&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;81&quot;,&quot;name&quot;:&quot;历史&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;82&quot;,&quot;name&quot;:&quot;地理&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;493&quot;,&quot;name&quot;:&quot;其他&quot;,&quot;stage&quot;:&quot;&quot;,&quot;parentId&quot;:&quot;26&quot;}]}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课附近三校区c=Coursev2&amp;a=nearSchool" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">113.523824</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">34.815005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
              <elementProp name="num" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">num</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=nearSchool</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="json中 data断言" enabled="true">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:&quot;71&quot;,&quot;name&quot;:&quot;万科城校区&quot;,&quot;lng&quot;:&quot;113.523824&quot;,&quot;lat&quot;:&quot;34.815005&quot;,&quot;distances&quot;:&quot;0.00&quot;},{&quot;id&quot;:&quot;129&quot;,&quot;name&quot;:&quot;锦和苑校区&quot;,&quot;lng&quot;:&quot;113.534236&quot;,&quot;lat&quot;:&quot;34.838788&quot;,&quot;distances&quot;:&quot;2.81&quot;},{&quot;id&quot;:&quot;107&quot;,&quot;name&quot;:&quot;谦祥万和城校区&quot;,&quot;lng&quot;:&quot;113.549278&quot;,&quot;lat&quot;:&quot;34.837062&quot;,&quot;distances&quot;:&quot;3.38&quot;}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取80个校区" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
              <elementProp name="num" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">80</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">num</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=nearSchool</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="json中 data断言" enabled="false">
            <stringProp name="JSON_PATH">$.data</stringProp>
            <stringProp name="EXPECTED_VALUE">[{&quot;id&quot;:&quot;71&quot;,&quot;name&quot;:&quot;万科城校区&quot;,&quot;lng&quot;:&quot;113.523824&quot;,&quot;lat&quot;:&quot;34.815005&quot;,&quot;distances&quot;:&quot;0.00&quot;},{&quot;id&quot;:&quot;129&quot;,&quot;name&quot;:&quot;锦和苑校区&quot;,&quot;lng&quot;:&quot;113.534236&quot;,&quot;lat&quot;:&quot;34.838788&quot;,&quot;distances&quot;:&quot;2.81&quot;},{&quot;id&quot;:&quot;107&quot;,&quot;name&quot;:&quot;谦祥万和城校区&quot;,&quot;lng&quot;:&quot;113.549278&quot;,&quot;lat&quot;:&quot;34.837062&quot;,&quot;distances&quot;:&quot;3.38&quot;}]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新版选课报班数据" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="studentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${x_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">studentId</stringProp>
              </elementProp>
              <elementProp name="x_s_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_s_type</stringProp>
              </elementProp>
              <elementProp name="nianji" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">nianji</stringProp>
              </elementProp>
              <elementProp name="subject_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject_id</stringProp>
              </elementProp>
              <elementProp name="school_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">school_id</stringProp>
              </elementProp>
              <elementProp name="class_year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">class_year</stringProp>
              </elementProp>
              <elementProp name="semester" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">semester</stringProp>
              </elementProp>
              <elementProp name="is_hide" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">is_hide</stringProp>
              </elementProp>
              <elementProp name="class_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">class_type</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageNum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageNum</stringProp>
              </elementProp>
              <elementProp name="lng" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lng</stringProp>
              </elementProp>
              <elementProp name="lat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lat</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=classCouseList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取班课课程id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">banke_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言status" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言msg" enabled="true">
            <stringProp name="JSON_PATH">$.msg</stringProp>
            <stringProp name="EXPECTED_VALUE">操作成功</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="班课详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${student_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="x_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${x_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_id</stringProp>
              </elementProp>
              <elementProp name="class_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${banke_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">class_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=classCouseInfo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1768401229">&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;操作成功&quot;,&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="IOS端相关接口" enabled="false">
        <stringProp name="TestPlan.comments">IosApp</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IOS余额购买" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="order_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">order_id</stringProp>
              </elementProp>
              <elementProp name="order_sn" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2020020213123213123123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">order_sn</stringProp>
              </elementProp>
              <elementProp name="money" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">money</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=ios&amp;a=touristBuy</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IOS游客模式我的学习币" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=ios&amp;a=touristMoney</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IOS游客模式账单" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=ios&amp;a=touristOrders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证苹果内购的ipa" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="receipt_data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&apos;87998qr78qwe8rq8w9rqwrqwer89qwer79&apos;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">receipt_data</stringProp>
              </elementProp>
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">151437</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="money" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">money</stringProp>
              </elementProp>
              <elementProp name="transaction_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20191119785454</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">transaction_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=ios&amp;a=checkIpa</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IOS游客模式" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ios_unique" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">abc1231aafadf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">ios_unique</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=ios&amp;a=touristMode</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证订单状态" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="order_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">9871</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">order_id</stringProp>
              </elementProp>
              <elementProp name="order_sn" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20191123150614789987</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">order_sn</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=ios&amp;a=checkOrderStatus</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="测试专用" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1516731</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.sanbox.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=threeDayC</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加VIP试听记录" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="student_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_name</stringProp>
              </elementProp>
              <elementProp name="x_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_id</stringProp>
              </elementProp>
              <elementProp name="tel" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tel</stringProp>
              </elementProp>
              <elementProp name="grade " elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grade </stringProp>
              </elementProp>
              <elementProp name="area" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">area</stringProp>
              </elementProp>
              <elementProp name="school" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">school</stringProp>
              </elementProp>
              <elementProp name="school_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">school_id</stringProp>
              </elementProp>
              <elementProp name="x_school_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">x_school_id</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.sanbox.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Coursev2&amp;a=addVipLn</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">18638109214</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">phone</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Aa123456</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="last_device" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">last_device</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.sanbox.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Userv2&amp;a=loginStuednt</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">login_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取学生单个班课的状态——班课id:${course_id}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="student_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">151673</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">student_id</stringProp>
              </elementProp>
              <elementProp name="class_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">class_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">interface.sanbox.xuexi8.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jiekou2/index.php?c=Userv2&amp;a=getStudentClassSta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
